{"ast":null,"code":"var _jsxFileName = \"/home/sjyoun1/Desktop/assignment-3/src/App.tsx\";\nimport { createGlobalStyle, ThemeProvider } from \"styled-components\";\n// import Circle from \"./Circle\";\n// import { useState } from 'react';\nimport Router from \"./Router\";\nimport { ReactQueryDevtools } from \"react-query/devtools\";\nimport { darkTheme, lightTheme } from \"./theme\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst GlobalStyle = createGlobalStyle`\n@import url('https://fonts.googleapis.com/css2?family=Source+Sans+Pro:wght@300;400&display=swap');\n\nhtml, body, div, span, applet, object, iframe,\nh1, h2, h3, h4, h5, h6, p, blockquote, pre,\na, abbr, acronym, address, big, cite, code,\ndel, dfn, em, img, ins, kbd, q, s, samp,\nsmall, strike, strong, sub, sup, tt, var,\nb, u, i, center,\ndl, dt, dd, menu, ol, ul, li,\nfieldset, form, label, legend,\ntable, caption, tbody, tfoot, thead, tr, th, td,\narticle, aside, canvas, details, embed,\nfigure, figcaption, footer, header, hgroup,\nmain, menu, nav, output, ruby, section, summary,\ntime, mark, audio, video {\n  margin: 0;\n  padding: 0;\n  border: 0;\n  font-size: 100%;\n  font: inherit;\n  vertical-align: baseline;\n}\n/* HTML5 display-role reset for older browsers */\narticle, aside, details, figcaption, figure,\nfooter, header, hgroup, main, menu, nav, section {\n  display: block;\n}\n/* HTML5 hidden-attribute fix for newer browsers */\n*[hidden] {\n    display: none;\n}\nbody {\n  line-height: 1;\n}\nmenu, ol, ul {\n  list-style: none;\n}\nblockquote, q {\n  quotes: none;\n}\nblockquote:before, blockquote:after,\nq:before, q:after {\n  content: '';\n  content: none;\n}\ntable {\n  border-collapse: collapse;\n  border-spacing: 0;\n}\n* {\n  box-sizing: border-box;\n}\nbody {\n  font-family: 'Source Sans Pro', sans-serif;\n  background-color: ${props => props.theme.bgColor};\n  color: ${props => props.theme.textColor};\n  font-weight: 300;\n  line-height: 1.2;\n}\na {\n  text-decoration: none;\n  color: inherit;\n}\n`;\n_c = GlobalStyle;\nfunction App() {\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(ThemeProvider, {\n      theme: isDark ? darkTheme : lightTheme,\n      children: [/*#__PURE__*/_jsxDEV(GlobalStyle, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Router, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(ReactQueryDevtools, {\n        initialIsOpen: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 5\n    }, this)\n  }, void 0, false);\n}\n\n/*\n  App은 두 변수들을 관장한다. App (isDark, modifierFn)\n  두 변수들은 Coins와 Chart에 각각 전달이 되는데, 전달이 되기까지 여러 컴포넌트들을 거쳐가야 한다. (계층구조)\n  Modifer(toggleDark) : App -> Router -> Coins\n  isDark : App -> Router -> Coin -> Chart\n\n  이런 현상을 지양하기 위해서 필요한 것이 Global State이다. \n  Global State는 Application이 전반적으로 인지해야하는 상태를 적용하기 위해 사용된다. \n  어디에서든지 확인할 수 있는 변수!**\n  Application에서 분리된 공간에서 관리되는 변수들이다. \n\n  ==> RECOIL\n*/\n_c2 = App;\nexport default App;\nvar _c, _c2;\n$RefreshReg$(_c, \"GlobalStyle\");\n$RefreshReg$(_c2, \"App\");","map":{"version":3,"names":["createGlobalStyle","ThemeProvider","Router","ReactQueryDevtools","darkTheme","lightTheme","GlobalStyle","props","theme","bgColor","textColor","App","isDark"],"sources":["/home/sjyoun1/Desktop/assignment-3/src/App.tsx"],"sourcesContent":["import { createGlobalStyle, ThemeProvider } from \"styled-components\";\nimport styled from \"styled-components\";\n// import Circle from \"./Circle\";\n// import { useState } from 'react';\nimport Router from \"./Router\";\nimport { ReactQueryDevtools } from \"react-query/devtools\";\nimport { darkTheme, lightTheme } from \"./theme\";\nimport { useState } from \"react\";\n\n\nconst GlobalStyle = createGlobalStyle`\n@import url('https://fonts.googleapis.com/css2?family=Source+Sans+Pro:wght@300;400&display=swap');\n\nhtml, body, div, span, applet, object, iframe,\nh1, h2, h3, h4, h5, h6, p, blockquote, pre,\na, abbr, acronym, address, big, cite, code,\ndel, dfn, em, img, ins, kbd, q, s, samp,\nsmall, strike, strong, sub, sup, tt, var,\nb, u, i, center,\ndl, dt, dd, menu, ol, ul, li,\nfieldset, form, label, legend,\ntable, caption, tbody, tfoot, thead, tr, th, td,\narticle, aside, canvas, details, embed,\nfigure, figcaption, footer, header, hgroup,\nmain, menu, nav, output, ruby, section, summary,\ntime, mark, audio, video {\n  margin: 0;\n  padding: 0;\n  border: 0;\n  font-size: 100%;\n  font: inherit;\n  vertical-align: baseline;\n}\n/* HTML5 display-role reset for older browsers */\narticle, aside, details, figcaption, figure,\nfooter, header, hgroup, main, menu, nav, section {\n  display: block;\n}\n/* HTML5 hidden-attribute fix for newer browsers */\n*[hidden] {\n    display: none;\n}\nbody {\n  line-height: 1;\n}\nmenu, ol, ul {\n  list-style: none;\n}\nblockquote, q {\n  quotes: none;\n}\nblockquote:before, blockquote:after,\nq:before, q:after {\n  content: '';\n  content: none;\n}\ntable {\n  border-collapse: collapse;\n  border-spacing: 0;\n}\n* {\n  box-sizing: border-box;\n}\nbody {\n  font-family: 'Source Sans Pro', sans-serif;\n  background-color: ${(props) => props.theme.bgColor};\n  color: ${(props) => props.theme.textColor};\n  font-weight: 300;\n  line-height: 1.2;\n}\na {\n  text-decoration: none;\n  color: inherit;\n}\n`;\n\nfunction App() {\n  return (<>\n    <ThemeProvider theme={isDark ? darkTheme : lightTheme}>\n      <GlobalStyle />\n      <Router />\n      <ReactQueryDevtools initialIsOpen={true} />\n    </ThemeProvider>\n  </>);\n}\n\n/*\n  App은 두 변수들을 관장한다. App (isDark, modifierFn)\n  두 변수들은 Coins와 Chart에 각각 전달이 되는데, 전달이 되기까지 여러 컴포넌트들을 거쳐가야 한다. (계층구조)\n  Modifer(toggleDark) : App -> Router -> Coins\n  isDark : App -> Router -> Coin -> Chart\n\n  이런 현상을 지양하기 위해서 필요한 것이 Global State이다. \n  Global State는 Application이 전반적으로 인지해야하는 상태를 적용하기 위해 사용된다. \n  어디에서든지 확인할 수 있는 변수!**\n  Application에서 분리된 공간에서 관리되는 변수들이다. \n\n  ==> RECOIL\n*/\n\nexport default App;\n"],"mappings":";AAAA,SAASA,iBAAiB,EAAEC,aAAa,QAAQ,mBAAmB;AAEpE;AACA;AACA,OAAOC,MAAM,MAAM,UAAU;AAC7B,SAASC,kBAAkB,QAAQ,sBAAsB;AACzD,SAASC,SAAS,EAAEC,UAAU,QAAQ,SAAS;AAAC;AAAA;AAIhD,MAAMC,WAAW,GAAGN,iBAAkB;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAuBO,KAAK,IAAKA,KAAK,CAACC,KAAK,CAACC,OAAQ;AACrD,WAAYF,KAAK,IAAKA,KAAK,CAACC,KAAK,CAACE,SAAU;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AAAC,KAhEIJ,WAAW;AAkEjB,SAASK,GAAG,GAAG;EACb,oBAAQ;IAAA,uBACN,QAAC,aAAa;MAAC,KAAK,EAAEC,MAAM,GAAGR,SAAS,GAAGC,UAAW;MAAA,wBACpD,QAAC,WAAW;QAAA;QAAA;QAAA;MAAA,QAAG,eACf,QAAC,MAAM;QAAA;QAAA;QAAA;MAAA,QAAG,eACV,QAAC,kBAAkB;QAAC,aAAa,EAAE;MAAK;QAAA;QAAA;QAAA;MAAA,QAAG;IAAA;MAAA;MAAA;MAAA;IAAA;EAC7B,iBACf;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAZA,MAVSM,GAAG;AAwBZ,eAAeA,GAAG;AAAC;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}