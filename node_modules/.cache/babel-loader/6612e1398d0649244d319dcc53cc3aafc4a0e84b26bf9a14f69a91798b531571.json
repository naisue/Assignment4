{"ast":null,"code":"var _jsxFileName = \"/home/sjyoun1/Desktop/assignment-3/src/routes/Chart.tsx\",\n  _s = $RefreshSig$();\nimport { useQuery } from \"react-query\";\nimport { fetchCoinHistory } from \"../api\";\nimport ApexChart from \"react-apexcharts\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Chart(_ref) {\n  _s();\n  let {\n    coinId\n  } = _ref;\n  const {\n    isLoading,\n    data\n  } = useQuery([\"ohlcv\", coinId], () => fetchCoinHistory(coinId));\n  const chartData = data === null || data === void 0 ? void 0 : data.map(i => {\n    return {\n      x: i.time_close,\n      y: [i.open, i.high, i.low, i.close]\n    };\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: isLoading ? \"Loading chart...\" : /*#__PURE__*/_jsxDEV(ApexChart, {\n      type: \"candlestick\",\n      series: [{\n        data: chartData ? chartData : []\n      }],\n      options: {\n        theme: {\n          mode: \"dark\"\n        },\n        chart: {\n          type: \"candlestick\",\n          height: 350,\n          width: 500,\n          toolbar: {\n            show: false\n          },\n          background: \"transparent\"\n        },\n        stroke: {\n          curve: \"smooth\",\n          width: 2\n        },\n        yaxis: {\n          show: false\n        },\n        xaxis: {\n          type: \"datetime\",\n          categories: data === null || data === void 0 ? void 0 : data.map(price => price.time_close),\n          labels: {\n            style: {\n              colors: '#9c88ff'\n            }\n          }\n        }\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this);\n}\n_s(Chart, \"3/UYpjJNObciauUid8uIQ//UcYY=\", false, function () {\n  return [useQuery];\n});\n_c = Chart;\nexport default Chart;\nvar _c;\n$RefreshReg$(_c, \"Chart\");","map":{"version":3,"names":["useQuery","fetchCoinHistory","ApexChart","Chart","coinId","isLoading","data","chartData","map","i","x","time_close","y","open","high","low","close","theme","mode","chart","type","height","width","toolbar","show","background","stroke","curve","yaxis","xaxis","categories","price","labels","style","colors"],"sources":["/home/sjyoun1/Desktop/assignment-3/src/routes/Chart.tsx"],"sourcesContent":["import { useQuery } from \"react-query\";\nimport { fetchCoinHistory } from \"../api\";\nimport ApexChart from \"react-apexcharts\";\n\ninterface ChartProps {\n  coinId: string;\n}\n\ninterface IHistorical {\n    time_open: string;\n    time_close: string;\n    open: number;\n    high: number;\n    low: number;\n    close: number;\n    volume: number;\n    market_cap: number;\n}\n\nfunction Chart ({ coinId }: ChartProps) {\n  const { isLoading, data } = useQuery<IHistorical[]>([\"ohlcv\", coinId], () =>\n    fetchCoinHistory(coinId)\n  );\n\n  const chartData = data?.map((i) => {\n    return {\n        x: i.time_close,\n        y: [i.open, i.high, i.low, i.close],\n    };\n  });\n\n  return (\n    <div>\n      {isLoading ? (\n        \"Loading chart...\"\n      ) : (\n        <ApexChart\n          type=\"candlestick\"\n          series={[\n            {\n              data: chartData? chartData : [],\n            }\n        ]}\n        options={{\n          theme: {\n            mode: \"dark\",\n          },\n          chart: {\n            type: \"candlestick\",\n            height: 350,\n            width: 500,\n            toolbar: {\n              show:false,\n            },\n            background: \"transparent\",\n          },\n          stroke: {\n            curve: \"smooth\",\n            width: 2,\n          },\n          yaxis: {\n            show: false,\n          },\n          xaxis: {\n            type: \"datetime\",\n            categories: data?.map((price) => price.time_close),\n            labels: {\n              style: {\n                colors: '#9c88ff'\n              }\n            }\n          },\n        }}\n        />\n      )}\n    </div>\n  );\n}\n\nexport default Chart;\n"],"mappings":";;AAAA,SAASA,QAAQ,QAAQ,aAAa;AACtC,SAASC,gBAAgB,QAAQ,QAAQ;AACzC,OAAOC,SAAS,MAAM,kBAAkB;AAAC;AAiBzC,SAASC,KAAK,OAA0B;EAAA;EAAA,IAAxB;IAAEC;EAAmB,CAAC;EACpC,MAAM;IAAEC,SAAS;IAAEC;EAAK,CAAC,GAAGN,QAAQ,CAAgB,CAAC,OAAO,EAAEI,MAAM,CAAC,EAAE,MACrEH,gBAAgB,CAACG,MAAM,CAAC,CACzB;EAED,MAAMG,SAAS,GAAGD,IAAI,aAAJA,IAAI,uBAAJA,IAAI,CAAEE,GAAG,CAAEC,CAAC,IAAK;IACjC,OAAO;MACHC,CAAC,EAAED,CAAC,CAACE,UAAU;MACfC,CAAC,EAAE,CAACH,CAAC,CAACI,IAAI,EAAEJ,CAAC,CAACK,IAAI,EAAEL,CAAC,CAACM,GAAG,EAAEN,CAAC,CAACO,KAAK;IACtC,CAAC;EACH,CAAC,CAAC;EAEF,oBACE;IAAA,UACGX,SAAS,GACR,kBAAkB,gBAElB,QAAC,SAAS;MACR,IAAI,EAAC,aAAa;MAClB,MAAM,EAAE,CACN;QACEC,IAAI,EAAEC,SAAS,GAAEA,SAAS,GAAG;MAC/B,CAAC,CACH;MACF,OAAO,EAAE;QACPU,KAAK,EAAE;UACLC,IAAI,EAAE;QACR,CAAC;QACDC,KAAK,EAAE;UACLC,IAAI,EAAE,aAAa;UACnBC,MAAM,EAAE,GAAG;UACXC,KAAK,EAAE,GAAG;UACVC,OAAO,EAAE;YACPC,IAAI,EAAC;UACP,CAAC;UACDC,UAAU,EAAE;QACd,CAAC;QACDC,MAAM,EAAE;UACNC,KAAK,EAAE,QAAQ;UACfL,KAAK,EAAE;QACT,CAAC;QACDM,KAAK,EAAE;UACLJ,IAAI,EAAE;QACR,CAAC;QACDK,KAAK,EAAE;UACLT,IAAI,EAAE,UAAU;UAChBU,UAAU,EAAExB,IAAI,aAAJA,IAAI,uBAAJA,IAAI,CAAEE,GAAG,CAAEuB,KAAK,IAAKA,KAAK,CAACpB,UAAU,CAAC;UAClDqB,MAAM,EAAE;YACNC,KAAK,EAAE;cACLC,MAAM,EAAE;YACV;UACF;QACF;MACF;IAAE;MAAA;MAAA;MAAA;IAAA;EAEH;IAAA;IAAA;IAAA;EAAA,QACG;AAEV;AAAC,GA1DQ/B,KAAK;EAAA,QACgBH,QAAQ;AAAA;AAAA,KAD7BG,KAAK;AA4Dd,eAAeA,KAAK;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}