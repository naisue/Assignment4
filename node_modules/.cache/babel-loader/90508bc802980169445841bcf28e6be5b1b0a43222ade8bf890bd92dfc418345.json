{"ast":null,"code":"var _jsxFileName = \"/home/sjyoun1/Desktop/assignment-4/src/ToDoList.tsx\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport { useForm } from \"react-hook-form\";\n\n// function ToDoList() {\n//     const [todo, setTodo] = useState(\"\");\n//     const [todoError, setToDoError] = useState(\"\")\n//     const onChange = (event:React.FormEvent<HTMLInputElement>) => {\n//         const { currentTarget: { value }, } = event; // event라는 변수에서 currentTarget이라는 값의 value를 destructure 구조로 가져온다.\n//         setToDoError(\"\")\n//         setTodo(value);\n//     };\n//     const onSubmit = (event: React.FormEvent<HTMLFormElement>) => {\n//         event.preventDefault();\n//         if(todo.length < 10){\n//             return setToDoError(\"To do should be longer.\")\n//         } \n//         console.log(\"submit\")\n//     }\n\n//     return <div>\n//         <form onSubmit={onSubmit}>\n//             <input onChange={ onChange } value={ todo } placeholder=\"Write a to do\"/>\n//             <button>Add</button>\n//             { todoError !== \"\" ? todoError : null }\n//         </form>\n//     </div>;\n// }\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ToDoList() {\n  _s();\n  const {\n    register,\n    watch\n  } = useForm();\n  const onValid = data => {\n    console.log(data);\n  };\n  console.log(watch());\n  // onChange Event handler\n  // input props & setState 역할을 다 한다. \n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        ...register(\"Email\"),\n        placeholder: \"Email\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 18\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        ...register(\"First Name\"),\n        placeholder: \"First Name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 18\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        ...register(\"Last Name\"),\n        placeholder: \"Last Name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 18\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        ...register(\"Username\"),\n        placeholder: \"Username\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 18\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        ...register(\"Password\"),\n        placeholder: \"Password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 18\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        children: \"Add\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 18\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 14\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 12\n  }, this);\n}\n_s(ToDoList, \"O4MAH5gNsCK/syc5n6B/mxwg3cs=\", false, function () {\n  return [useForm];\n});\n_c = ToDoList;\nexport default ToDoList;\nvar _c;\n$RefreshReg$(_c, \"ToDoList\");","map":{"version":3,"names":["React","useForm","ToDoList","register","watch","onValid","data","console","log"],"sources":["/home/sjyoun1/Desktop/assignment-4/src/ToDoList.tsx"],"sourcesContent":["import React, { useState } from \"react\";\nimport { useForm } from \"react-hook-form\";\n\n// function ToDoList() {\n//     const [todo, setTodo] = useState(\"\");\n//     const [todoError, setToDoError] = useState(\"\")\n//     const onChange = (event:React.FormEvent<HTMLInputElement>) => {\n//         const { currentTarget: { value }, } = event; // event라는 변수에서 currentTarget이라는 값의 value를 destructure 구조로 가져온다.\n//         setToDoError(\"\")\n//         setTodo(value);\n//     };\n//     const onSubmit = (event: React.FormEvent<HTMLFormElement>) => {\n//         event.preventDefault();\n//         if(todo.length < 10){\n//             return setToDoError(\"To do should be longer.\")\n//         } \n//         console.log(\"submit\")\n//     }\n\n//     return <div>\n//         <form onSubmit={onSubmit}>\n//             <input onChange={ onChange } value={ todo } placeholder=\"Write a to do\"/>\n//             <button>Add</button>\n//             { todoError !== \"\" ? todoError : null }\n//         </form>\n//     </div>;\n// }\n\nfunction ToDoList (){\n    const { register, watch } = useForm();\n    const onValid = (data:any) => {\n        console.log(data)\n    }\n    console.log(watch())\n    // onChange Event handler\n    // input props & setState 역할을 다 한다. \n\n\n    return <div>\n             <form>\n                 <input {...register(\"Email\")} placeholder=\"Email\"/>\n                 <input {...register(\"First Name\")} placeholder=\"First Name\"/>\n                 <input {...register(\"Last Name\")} placeholder=\"Last Name\"/>\n                 <input {...register(\"Username\")} placeholder=\"Username\"/>\n                 <input {...register(\"Password\")} placeholder=\"Password\"/>\n                 <button>Add</button>\n             </form>\n         </div>;\n}\n\nexport default ToDoList;\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAoB,OAAO;AACvC,SAASC,OAAO,QAAQ,iBAAiB;;AAEzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAEA,SAASC,QAAQ,GAAG;EAAA;EAChB,MAAM;IAAEC,QAAQ;IAAEC;EAAM,CAAC,GAAGH,OAAO,EAAE;EACrC,MAAMI,OAAO,GAAIC,IAAQ,IAAK;IAC1BC,OAAO,CAACC,GAAG,CAACF,IAAI,CAAC;EACrB,CAAC;EACDC,OAAO,CAACC,GAAG,CAACJ,KAAK,EAAE,CAAC;EACpB;EACA;;EAGA,oBAAO;IAAA,uBACE;MAAA,wBACI;QAAA,GAAWD,QAAQ,CAAC,OAAO,CAAC;QAAE,WAAW,EAAC;MAAO;QAAA;QAAA;QAAA;MAAA,QAAE,eACnD;QAAA,GAAWA,QAAQ,CAAC,YAAY,CAAC;QAAE,WAAW,EAAC;MAAY;QAAA;QAAA;QAAA;MAAA,QAAE,eAC7D;QAAA,GAAWA,QAAQ,CAAC,WAAW,CAAC;QAAE,WAAW,EAAC;MAAW;QAAA;QAAA;QAAA;MAAA,QAAE,eAC3D;QAAA,GAAWA,QAAQ,CAAC,UAAU,CAAC;QAAE,WAAW,EAAC;MAAU;QAAA;QAAA;QAAA;MAAA,QAAE,eACzD;QAAA,GAAWA,QAAQ,CAAC,UAAU,CAAC;QAAE,WAAW,EAAC;MAAU;QAAA;QAAA;QAAA;MAAA,QAAE,eACzD;QAAA,UAAQ;MAAG;QAAA;QAAA;QAAA;MAAA,QAAS;IAAA;MAAA;MAAA;MAAA;IAAA;EACjB;IAAA;IAAA;IAAA;EAAA,QACL;AACf;AAAC,GApBQD,QAAQ;EAAA,QACeD,OAAO;AAAA;AAAA,KAD9BC,QAAQ;AAsBjB,eAAeA,QAAQ;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}